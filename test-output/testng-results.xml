<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="12" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-09-28T16:56:33 IST" name="mySuite" finished-at="2024-09-28T16:57:06 IST" duration-ms="33501">
    <groups>
    </groups>
    <test started-at="2024-09-28T16:56:33 IST" name="mytest-chrome" finished-at="2024-09-28T16:57:05 IST" duration-ms="32423">
      <class name="testCases.TC_001_Registration">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001_Registration@49049a04]" started-at="2024-09-28T16:56:33 IST" name="setup" finished-at="2024-09-28T16:56:43 IST" duration-ms="9925" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[WINDOW]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="reg(java.lang.String)[pri:0, instance:testCases.TC_001_Registration@49049a04]" started-at="2024-09-28T16:56:43 IST" name="reg" finished-at="2024-09-28T16:56:43 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINDOW]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="sanity(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001_Registration@49049a04]" started-at="2024-09-28T16:56:43 IST" name="sanity" finished-at="2024-09-28T16:56:43 IST" duration-ms="50" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINDOW]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanity -->
        <test-method signature="verifyNavigateRegPage()[pri:0, instance:testCases.TC_001_Registration@49049a04]" started-at="2024-09-28T16:56:43 IST" name="verifyNavigateRegPage" finished-at="2024-09-28T16:56:51 IST" duration-ms="8231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNavigateRegPage -->
        <test-method signature="verifyAccountReg()[pri:1, instance:testCases.TC_001_Registration@49049a04]" started-at="2024-09-28T16:56:51 IST" name="verifyAccountReg" finished-at="2024-09-28T16:57:02 IST" duration-ms="11423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAccountReg -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_001_Registration@49049a04]" started-at="2024-09-28T16:57:02 IST" name="tearDown" finished-at="2024-09-28T16:57:05 IST" duration-ms="2710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_001_Registration -->
      <class name="testCases.TC_002_TableValidation">
        <test-method signature="tableValidation()[pri:0, instance:testCases.TC_002_TableValidation@4310d43]" started-at="2024-09-28T16:56:43 IST" name="tableValidation" finished-at="2024-09-28T16:56:43 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableValidation -->
      </class> <!-- testCases.TC_002_TableValidation -->
    </test> <!-- mytest-chrome -->
    <test started-at="2024-09-28T16:56:33 IST" name="myTest-edge" finished-at="2024-09-28T16:57:06 IST" duration-ms="33501">
      <class name="testCases.TC_001_Registration">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001_Registration@6340e5f0]" started-at="2024-09-28T16:56:33 IST" name="setup" finished-at="2024-09-28T16:56:42 IST" duration-ms="9384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[WINDOW]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="reg(java.lang.String)[pri:0, instance:testCases.TC_001_Registration@6340e5f0]" started-at="2024-09-28T16:56:42 IST" name="reg" finished-at="2024-09-28T16:56:42 IST" duration-ms="108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINDOW]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reg -->
        <test-method signature="sanity(java.lang.String,java.lang.String)[pri:0, instance:testCases.TC_001_Registration@6340e5f0]" started-at="2024-09-28T16:56:42 IST" name="sanity" finished-at="2024-09-28T16:56:42 IST" duration-ms="10" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[WINDOW]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [chrome] but found [edge]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [chrome] but found [edge]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at testCases.TC_001_Registration.sanity(TC_001_Registration.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:136)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:658)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:219)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:923)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:192)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:32)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:467)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanity -->
        <test-method signature="verifyNavigateRegPage()[pri:0, instance:testCases.TC_001_Registration@6340e5f0]" started-at="2024-09-28T16:56:43 IST" name="verifyNavigateRegPage" finished-at="2024-09-28T16:56:51 IST" duration-ms="8388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNavigateRegPage -->
        <test-method signature="verifyAccountReg()[pri:1, instance:testCases.TC_001_Registration@6340e5f0]" started-at="2024-09-28T16:56:51 IST" name="verifyAccountReg" finished-at="2024-09-28T16:57:04 IST" duration-ms="13299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAccountReg -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testCases.TC_001_Registration@6340e5f0]" started-at="2024-09-28T16:57:04 IST" name="tearDown" finished-at="2024-09-28T16:57:06 IST" duration-ms="1910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.TC_001_Registration -->
      <class name="testCases.TC_002_TableValidation">
        <test-method signature="tableValidation()[pri:0, instance:testCases.TC_002_TableValidation@45099dd3]" started-at="2024-09-28T16:56:42 IST" name="tableValidation" finished-at="2024-09-28T16:56:43 IST" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tableValidation -->
      </class> <!-- testCases.TC_002_TableValidation -->
    </test> <!-- myTest-edge -->
  </suite> <!-- mySuite -->
</testng-results>
